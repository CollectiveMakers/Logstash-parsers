filter {
 if [type] == "paloalto" {
        grok {
                patterns_dir => "/etc/logstash/patterns/paloalto.pattern"
                match => [ "message", "%{PALOALTOLOG}" ]
        }
	grok {
                patterns_dir => "/etc/logstash/patterns/paloalto.pattern"
                match => [ "pa_message", "%{PALOALTOLOGTYPE}" ]
        }
	if [pa_type] == "TRAFFIC" {
		csv {
    			source => pa_message
    			columns => [ "pa_domain","pa_receivetime","pa_serialnum","pa_type","pa_subtype","pa_configversion","pa_generatetime","src_ip","dst_ip","src_nat_ip","dst_nat_ip","pa_rule","src_fwuser","dst_fwuser","pa_application","pa_virtualsystem","src_zone","dst_zone","src_interface","dst_interface","pa_logforwardingprofile","pa_timelogged","session_id","pa_repeatcount","src_port","dst_port","src_nat_port","dst_nat_port","tcp_flags","proto","action","bytes","bytes_sent","bytes_received","packets","pa_starttime","pa_elapsedtime","pa_category","padding","seqno","action_flags","pa_src_country","pa_dst_country","cpadding","pkts_sent","pkts_received","reason","pa_devicegroupl1","pa_devicegroupl2","pa_devicegroupl3","pa_devicegroupl4","pa_virtualsystem_name","pa_devicename","pa_action_src" ]
		}
	} else if [pa_type] == "THREAT" {
		csv {
                        source => pa_message
                        columns => [ "pa_domain","pa_receivetime","pa_serialnum","pa_type","pa_subtype","pa_configversion","pa_generatetime","src_ip","dst_ip","src_nat_ip","dst_nat_ip","pa_rule","src_fwuser","dst_fwuser","pa_application","pa_virtualsystem","src_zone","dst_zone","src_interface","dst_interface","pa_logforwardingprofile","pa_timelogged","session_id","pa_repeatcount","src_port","dst_port","src_nat_port","dst_nat_port","tcp_flags","proto","action","threat_miscellaneous","threat_id","threat_category","threat_severity","threat_direction","seqno","action_flags","pa_src_country","pa_dst_country","cpadding","content_type","pcap_id","filedigest","cloud","http_url_index","http_user_agent","file_type","http_x-forwarded-for","http_referer","mail_sender","mail_subject","mail_recipient","threat_report_id","pa_devicegroupl1","pa_devicegroupl2","pa_devicegroupl3","pa_devicegroupl4","pa_virtualsystem_name","pa_devicename","pa_action_src" ]
		}	
	}
        else if [pa_type] == "CONFIG" {
		csv {
                        source => pa_message
                        columns => [ "pa_domain","pa_receivetime","pa_serialnum","pa_type","pa_subtype","pa_configversion","pa_generatetime","pa_virtualsystem","pa_cmd","pa_admin","pa_client","pa_cmd_result","pa_config_path","seqno","action_flags","pa_before_change_detail","pa_after_change_detail","pa_devicegroupl1","pa_devicegroupl2","pa_devicegroupl3","pa_devicegroupl4","pa_virtualsystem_name","pa_devicename" ]
                }
	} else if [pa_type] == "SYSTEM" {
		csv {
                        source => pa_message
                        columns => [ "pa_domain","pa_receivetime","pa_serialnum","pa_type","pa_subtype","pa_configversion","pa_generatetime","pa_virtualsystem","pa_event_id","pa_object","Col11","Col12","pa_module","pa_severity","pa_desc","seqno","action_flags","pa_devicegroupl1","pa_devicegroupl2","pa_devicegroupl3","pa_devicegroupl4","pa_virtualsystem_name","pa_devicename" ]
                }
	} else if [pa_type] == "HIP-MATCH" {
		csv {
                        source => pa_message
                        columns => [ "pa_domain","pa_receivetime","pa_serialnum","pa_type","pa_subtype","pa_configversion","pa_generatetime","src_fwuser","pa_virtualsystem","host_name","OS","src_ip","pa_hip","pa_repeatcount","pa_hip_type","Col16","Col17","seqno","action_flags","pa_devicegroupl1","pa_devicegroupl2","pa_devicegroupl3","pa_devicegroupl4","pa_virtualsystem_name","pa_devicename" ]
                }
    }
	if [pa_timelogged] {
        	date {
                	match => [ "pa_timelogged", "yyyy/MM/dd HH:mm:ss" ]
			target => "time_logged"
              	}
	}
	else if [pa_receivetime] {
			date {
				match => [ "pa_receivetime", "yyyy/MM/dd HH:mm:ss" ]
                        	target => "time_logged"
                	}
		}
	else {
		date {
			match => [ "time_logged", "MMM dd HH:mm:ss", "MMM dd HH:mm:ss.SSS", "MMM  d HH:mm:ss",  "MMM  d HH:mm:ss.SSS" ]
                       	target => "time_logged"
		}
	}
	mutate { remove_field => [ "pa_message" ] }
	mutate { remove_field => [ "end_of_message" ] }
}
}
	
